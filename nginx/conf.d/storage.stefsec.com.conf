# HTTP → HTTPS (ACME challenge) + métricas en HTTP
server {
    listen 80 default_server;
    server_name _;

    # DOCUMENT_ROOT
    root /var/www/html;
    index index.php index.html;

    # 1) ACME challenge
    location /.well-known/acme-challenge/ {
        alias /var/www/certbot/.well-known/acme-challenge/;
    }

    # 2) Metrics en HTTP
    location = /metrics {
        # Indicamos explícitamente el SCRIPT_FILENAME
        fastcgi_pass   php:9000;
        include        fastcgi_params;
        fastcgi_param  SCRIPT_FILENAME  /var/www/html/metrics.php;
        add_header     Cache-Control "no-cache, no-store";
    }

    # 3) Redirigir resto a HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS storage app
server {
    listen 443 ssl;
    server_name storage.stefsec.com;

    ssl_certificate     /etc/letsencrypt/live/storage.stefsec.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/storage.stefsec.com/privkey.pem;
    include             /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam         /etc/letsencrypt/ssl-dhparams.pem;

    # Permitir hasta 1 GB en el cuerpo de las peticiones
    client_max_body_size 10G;

    # Directorio principal de la app
    root /var/www/html;
    index index.php index.html;

    # Alias para los archivos subidos
    location /uploads/ {
        alias /mnt/remote_storage/;
        autoindex off;
        add_header X-Accel-Buffering no;
    }

    # Manejo estático y fallback a index.php
    location / {
        try_files $uri $uri/ /index.php?$args;
    }

    # PHP-FPM para resto de .php
    location ~ \.php$ {
        fastcgi_pass   php:9000;
        fastcgi_index  index.php;
        include        fastcgi_params;
        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
    }

    # Caché de assets
    location ~* \.(js|css|png|jpg|jpeg|gif|svg)$ {
        expires 30d;
        add_header Cache-Control "public";
    }
}
