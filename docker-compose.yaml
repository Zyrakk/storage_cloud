services:
  nginx:
    image: nginx:stable-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - ./main:/var/www/main:ro
      - ./storage-app/public:/var/www/html:ro
      - /mnt/remote_storage:/mnt/remote_storage:ro
    depends_on:
      - php
    restart: unless-stopped

  php:
    build: ./storage-app
    environment:
      # Redis
      - REDIS_HOST=redis
      - REDIS_PORT=6379

      # PostgreSQL
      - DB_HOST=db
      - DB_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

      # Upload
      - UPLOAD_PATH=/mnt/remote_storage
      - MAX_UPLOAD_SIZE=1073741824
    volumes:
      - ./storage-app/public:/var/www/html
      - ./storage-app/src:/var/www/html/src:ro
      - vendor_data:/var/www/html/vendor
      - ./main:/var/www/main
      - /mnt/remote_storage:/mnt/remote_storage
    expose:
      - "9000"
    depends_on:
      - db
      - redis
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    restart: unless-stopped

  db:
    image: postgres:15
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d:ro
    restart: unless-stopped

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: >
      sh -c "trap exit TERM;
             while :; do
               certbot renew --webroot -w /var/www/certbot --quiet &&
               nginx -s reload;
               sleep 12h;
             done"
    depends_on:
      - nginx

  node_exporter:
    image: quay.io/prometheus/node-exporter:v1.5.0
    restart: unless-stopped
    network_mode: host
    pid: "host"
    volumes:
      - /:/rootfs:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
    command:
      - --path.rootfs=/rootfs
      - --collector.filesystem.ignored-fs-types=""
      - --collector.filesystem.ignored-mount-points=""
      - --collector.reboot-required

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    restart: unless-stopped
    network_mode: host
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

volumes:
  db_data:
  vendor_data:
